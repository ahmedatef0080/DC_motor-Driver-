
DC_Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000042a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  00800060  00800060  0000042a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000042a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000045c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000498  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d6e  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000786  00000000  00000000  00001346  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000757  00000000  00000000  00001acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000026c  00000000  00000000  00002224  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000514  00000000  00000000  00002490  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005fe  00000000  00000000  000029a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00002fa2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 78 01 	jmp	0x2f0	; 0x2f0 <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	ab 36       	cpi	r26, 0x6B	; 107
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 54 01 	call	0x2a8	; 0x2a8 <main>
  74:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DC_Motor_init>:
}

void PWM_LED(void)
{
	
	DIO_SetPinValue(DIO_PORTC,DIO_PIN2,DIO_PIN_HIGH);
  7c:	41 e0       	ldi	r20, 0x01	; 1
  7e:	63 e0       	ldi	r22, 0x03	; 3
  80:	82 e0       	ldi	r24, 0x02	; 2
  82:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDirection>
  86:	41 e0       	ldi	r20, 0x01	; 1
  88:	64 e0       	ldi	r22, 0x04	; 4
  8a:	82 e0       	ldi	r24, 0x02	; 2
  8c:	0e 94 72 00 	call	0xe4	; 0xe4 <DIO_SetPinDirection>
  90:	0e 94 5f 01 	call	0x2be	; 0x2be <PWM_Init>
  94:	08 95       	ret

00000096 <Dc_Motor_Direction>:
}


void Dc_Motor_Direction(uint8 dir){
	switch(dir)
  96:	88 23       	and	r24, r24
  98:	19 f0       	breq	.+6      	; 0xa0 <Dc_Motor_Direction+0xa>
  9a:	81 30       	cpi	r24, 0x01	; 1
  9c:	61 f0       	breq	.+24     	; 0xb6 <Dc_Motor_Direction+0x20>
  9e:	08 95       	ret
	{
		case CLOCK_WISE_DRIRECTION :
		DIO_SetPinValue(DIO_PORTC,DIO_PIN3,DIO_PIN_HIGH);
  a0:	41 e0       	ldi	r20, 0x01	; 1
  a2:	63 e0       	ldi	r22, 0x03	; 3
  a4:	82 e0       	ldi	r24, 0x02	; 2
  a6:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <DIO_SetPinValue>
		DIO_SetPinValue(DIO_PORTC,DIO_PIN4,DIO_PIN_LOW);
  aa:	40 e0       	ldi	r20, 0x00	; 0
  ac:	64 e0       	ldi	r22, 0x04	; 4
  ae:	82 e0       	ldi	r24, 0x02	; 2
  b0:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <DIO_SetPinValue>
		break;
  b4:	08 95       	ret
		
		case ANTI_CLOCK_WISE_DIRECTION:
		DIO_SetPinValue(DIO_PORTC,DIO_PIN3,DIO_PIN_LOW);
  b6:	40 e0       	ldi	r20, 0x00	; 0
  b8:	63 e0       	ldi	r22, 0x03	; 3
  ba:	82 e0       	ldi	r24, 0x02	; 2
  bc:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <DIO_SetPinValue>
		DIO_SetPinValue(DIO_PORTC,DIO_PIN4,DIO_PIN_HIGH);
  c0:	41 e0       	ldi	r20, 0x01	; 1
  c2:	64 e0       	ldi	r22, 0x04	; 4
  c4:	82 e0       	ldi	r24, 0x02	; 2
  c6:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <DIO_SetPinValue>
  ca:	08 95       	ret

000000cc <DC_Motor_Set_Speed>:


void DC_Motor_Set_Speed(uint8 speed){
	
	speed *= 10;     // multiplay by 10 3shan lma ab3to l PWM_GEN ydene DC 2li 3wzha
	PWM_Generation(speed);
  cc:	88 0f       	add	r24, r24
  ce:	98 2f       	mov	r25, r24
  d0:	99 0f       	add	r25, r25
  d2:	99 0f       	add	r25, r25
  d4:	89 0f       	add	r24, r25
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	0e 94 64 01 	call	0x2c8	; 0x2c8 <PWM_Generation>
  dc:	08 95       	ret

000000de <DC_Motor_Start>:



void DC_Motor_Start(void)
{
	PWM_Start();
  de:	0e 94 74 01 	call	0x2e8	; 0x2e8 <PWM_Start>
  e2:	08 95       	ret

000000e4 <DIO_SetPinDirection>:
	  break;
	   case DIO_PORTC:
	   PORTC = Val;
	   break;
	    case DIO_PORTD:
	    PORTD = Val;
  e4:	44 23       	and	r20, r20
  e6:	b9 f1       	breq	.+110    	; 0x156 <DIO_SetPinDirection+0x72>
  e8:	41 30       	cpi	r20, 0x01	; 1
  ea:	09 f0       	breq	.+2      	; 0xee <DIO_SetPinDirection+0xa>
  ec:	6b c0       	rjmp	.+214    	; 0x1c4 <DIO_SetPinDirection+0xe0>
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	89 f0       	breq	.+34     	; 0x114 <DIO_SetPinDirection+0x30>
  f2:	28 f0       	brcs	.+10     	; 0xfe <DIO_SetPinDirection+0x1a>
  f4:	82 30       	cpi	r24, 0x02	; 2
  f6:	c9 f0       	breq	.+50     	; 0x12a <DIO_SetPinDirection+0x46>
  f8:	83 30       	cpi	r24, 0x03	; 3
  fa:	11 f1       	breq	.+68     	; 0x140 <DIO_SetPinDirection+0x5c>
  fc:	08 95       	ret
  fe:	2a b3       	in	r18, 0x1a	; 26
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_SetPinDirection+0x26>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_SetPinDirection+0x22>
 10e:	82 2b       	or	r24, r18
 110:	8a bb       	out	0x1a, r24	; 26
 112:	08 95       	ret
 114:	27 b3       	in	r18, 0x17	; 23
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_SetPinDirection+0x3c>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_SetPinDirection+0x38>
 124:	82 2b       	or	r24, r18
 126:	87 bb       	out	0x17, r24	; 23
 128:	08 95       	ret
 12a:	24 b3       	in	r18, 0x14	; 20
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_SetPinDirection+0x52>
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	6a 95       	dec	r22
 138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_SetPinDirection+0x4e>
 13a:	82 2b       	or	r24, r18
 13c:	84 bb       	out	0x14, r24	; 20
 13e:	08 95       	ret
 140:	21 b3       	in	r18, 0x11	; 17
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_SetPinDirection+0x68>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_SetPinDirection+0x64>
 150:	82 2b       	or	r24, r18
 152:	81 bb       	out	0x11, r24	; 17
 154:	08 95       	ret
 156:	81 30       	cpi	r24, 0x01	; 1
 158:	91 f0       	breq	.+36     	; 0x17e <DIO_SetPinDirection+0x9a>
 15a:	28 f0       	brcs	.+10     	; 0x166 <DIO_SetPinDirection+0x82>
 15c:	82 30       	cpi	r24, 0x02	; 2
 15e:	d9 f0       	breq	.+54     	; 0x196 <DIO_SetPinDirection+0xb2>
 160:	83 30       	cpi	r24, 0x03	; 3
 162:	29 f1       	breq	.+74     	; 0x1ae <DIO_SetPinDirection+0xca>
 164:	08 95       	ret
 166:	2a b3       	in	r18, 0x1a	; 26
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 c0       	rjmp	.+4      	; 0x172 <DIO_SetPinDirection+0x8e>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	6a 95       	dec	r22
 174:	e2 f7       	brpl	.-8      	; 0x16e <DIO_SetPinDirection+0x8a>
 176:	80 95       	com	r24
 178:	82 23       	and	r24, r18
 17a:	8a bb       	out	0x1a, r24	; 26
 17c:	08 95       	ret
 17e:	27 b3       	in	r18, 0x17	; 23
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_SetPinDirection+0xa6>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_SetPinDirection+0xa2>
 18e:	80 95       	com	r24
 190:	82 23       	and	r24, r18
 192:	87 bb       	out	0x17, r24	; 23
 194:	08 95       	ret
 196:	24 b3       	in	r18, 0x14	; 20
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <DIO_SetPinDirection+0xbe>
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	6a 95       	dec	r22
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <DIO_SetPinDirection+0xba>
 1a6:	80 95       	com	r24
 1a8:	82 23       	and	r24, r18
 1aa:	84 bb       	out	0x14, r24	; 20
 1ac:	08 95       	ret
 1ae:	21 b3       	in	r18, 0x11	; 17
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_SetPinDirection+0xd6>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	6a 95       	dec	r22
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_SetPinDirection+0xd2>
 1be:	80 95       	com	r24
 1c0:	82 23       	and	r24, r18
 1c2:	81 bb       	out	0x11, r24	; 17
 1c4:	08 95       	ret

000001c6 <DIO_SetPinValue>:
	}

}
void DIO_SetPinValue(uint8 Port ,uint8 Pin ,  uint8 Val) // val== high or low "1,0";
{
	switch(Val)
 1c6:	44 23       	and	r20, r20
 1c8:	b9 f1       	breq	.+110    	; 0x238 <DIO_SetPinValue+0x72>
 1ca:	41 30       	cpi	r20, 0x01	; 1
 1cc:	09 f0       	breq	.+2      	; 0x1d0 <DIO_SetPinValue+0xa>
 1ce:	6b c0       	rjmp	.+214    	; 0x2a6 <DIO_SetPinValue+0xe0>
	{
		case DIO_PIN_HIGH:
		switch(Port)
 1d0:	81 30       	cpi	r24, 0x01	; 1
 1d2:	89 f0       	breq	.+34     	; 0x1f6 <DIO_SetPinValue+0x30>
 1d4:	28 f0       	brcs	.+10     	; 0x1e0 <DIO_SetPinValue+0x1a>
 1d6:	82 30       	cpi	r24, 0x02	; 2
 1d8:	c9 f0       	breq	.+50     	; 0x20c <DIO_SetPinValue+0x46>
 1da:	83 30       	cpi	r24, 0x03	; 3
 1dc:	11 f1       	breq	.+68     	; 0x222 <DIO_SetPinValue+0x5c>
 1de:	08 95       	ret
		{
			case DIO_PORTA:
			set_bit(PORTA,Pin);
 1e0:	2b b3       	in	r18, 0x1b	; 27
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_SetPinValue+0x26>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_SetPinValue+0x22>
 1f0:	82 2b       	or	r24, r18
 1f2:	8b bb       	out	0x1b, r24	; 27
			break;
 1f4:	08 95       	ret
			case DIO_PORTB:
			set_bit(PORTB,Pin);
 1f6:	28 b3       	in	r18, 0x18	; 24
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <DIO_SetPinValue+0x3c>
 1fe:	88 0f       	add	r24, r24
 200:	99 1f       	adc	r25, r25
 202:	6a 95       	dec	r22
 204:	e2 f7       	brpl	.-8      	; 0x1fe <DIO_SetPinValue+0x38>
 206:	82 2b       	or	r24, r18
 208:	88 bb       	out	0x18, r24	; 24
			break;
 20a:	08 95       	ret
			case DIO_PORTC:
			set_bit(PORTC,Pin);
 20c:	25 b3       	in	r18, 0x15	; 21
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_SetPinValue+0x52>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	6a 95       	dec	r22
 21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_SetPinValue+0x4e>
 21c:	82 2b       	or	r24, r18
 21e:	85 bb       	out	0x15, r24	; 21
			break;
 220:	08 95       	ret
			case DIO_PORTD:
			set_bit(PORTD,Pin);
 222:	22 b3       	in	r18, 0x12	; 18
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_SetPinValue+0x68>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	6a 95       	dec	r22
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_SetPinValue+0x64>
 232:	82 2b       	or	r24, r18
 234:	82 bb       	out	0x12, r24	; 18
			break;
 236:	08 95       	ret
			default:
			break;
		}
		break;
		case DIO_PIN_LOW:
		switch(Port)
 238:	81 30       	cpi	r24, 0x01	; 1
 23a:	91 f0       	breq	.+36     	; 0x260 <DIO_SetPinValue+0x9a>
 23c:	28 f0       	brcs	.+10     	; 0x248 <DIO_SetPinValue+0x82>
 23e:	82 30       	cpi	r24, 0x02	; 2
 240:	d9 f0       	breq	.+54     	; 0x278 <DIO_SetPinValue+0xb2>
 242:	83 30       	cpi	r24, 0x03	; 3
 244:	29 f1       	breq	.+74     	; 0x290 <DIO_SetPinValue+0xca>
 246:	08 95       	ret
		{
			case DIO_PORTA:
			clear_bit(PORTA,Pin);
 248:	2b b3       	in	r18, 0x1b	; 27
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_SetPinValue+0x8e>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_SetPinValue+0x8a>
 258:	80 95       	com	r24
 25a:	82 23       	and	r24, r18
 25c:	8b bb       	out	0x1b, r24	; 27
			break;
 25e:	08 95       	ret
			case DIO_PORTB:
			clear_bit(PORTB,Pin);
 260:	28 b3       	in	r18, 0x18	; 24
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 c0       	rjmp	.+4      	; 0x26c <DIO_SetPinValue+0xa6>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	6a 95       	dec	r22
 26e:	e2 f7       	brpl	.-8      	; 0x268 <DIO_SetPinValue+0xa2>
 270:	80 95       	com	r24
 272:	82 23       	and	r24, r18
 274:	88 bb       	out	0x18, r24	; 24
			break;
 276:	08 95       	ret
			case DIO_PORTC:
			clear_bit(PORTC,Pin);
 278:	25 b3       	in	r18, 0x15	; 21
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_SetPinValue+0xbe>
 280:	88 0f       	add	r24, r24
 282:	99 1f       	adc	r25, r25
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_SetPinValue+0xba>
 288:	80 95       	com	r24
 28a:	82 23       	and	r24, r18
 28c:	85 bb       	out	0x15, r24	; 21
			break;
 28e:	08 95       	ret
			case DIO_PORTD:
			clear_bit(PORTD,Pin);
 290:	22 b3       	in	r18, 0x12	; 18
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_SetPinValue+0xd6>
 298:	88 0f       	add	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	6a 95       	dec	r22
 29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_SetPinValue+0xd2>
 2a0:	80 95       	com	r24
 2a2:	82 23       	and	r24, r18
 2a4:	82 bb       	out	0x12, r24	; 18
 2a6:	08 95       	ret

000002a8 <main>:


int main(void)
{
	
	DC_Motor_init();
 2a8:	0e 94 3e 00 	call	0x7c	; 0x7c <DC_Motor_init>
	
	
	
	
	Dc_Motor_Direction(CLOCK_WISE_DRIRECTION);
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	0e 94 4b 00 	call	0x96	; 0x96 <Dc_Motor_Direction>
	
	
	
	
	DC_Motor_Set_Speed(8);
 2b2:	88 e0       	ldi	r24, 0x08	; 8
 2b4:	0e 94 66 00 	call	0xcc	; 0xcc <DC_Motor_Set_Speed>
	
	
	
	
	
	DC_Motor_Start();
 2b8:	0e 94 6f 00 	call	0xde	; 0xde <DC_Motor_Start>
 2bc:	ff cf       	rjmp	.-2      	; 0x2bc <main+0x14>

000002be <PWM_Init>:



void PWM_Init(void){
	
	DDRB |=(1<<3); // set port B pin 3 as OUTPUT 
 2be:	bb 9a       	sbi	0x17, 3	; 23
	
	TCCR0 |=0x68; // fast PWM mode "non inverted mode "
 2c0:	83 b7       	in	r24, 0x33	; 51
 2c2:	88 66       	ori	r24, 0x68	; 104
 2c4:	83 bf       	out	0x33, r24	; 51
 2c6:	08 95       	ret

000002c8 <PWM_Generation>:
}


void PWM_Generation(uint16 Duty_Cycle)
{
	OCR0 = ((256 * Duty_Cycle)/100)-1;
 2c8:	20 e0       	ldi	r18, 0x00	; 0
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	38 2f       	mov	r19, r24
 2ce:	36 95       	lsr	r19
 2d0:	27 95       	ror	r18
 2d2:	36 95       	lsr	r19
 2d4:	27 95       	ror	r18
 2d6:	ab e7       	ldi	r26, 0x7B	; 123
 2d8:	b4 e1       	ldi	r27, 0x14	; 20
 2da:	0e 94 ca 01 	call	0x394	; 0x394 <__umulhisi3>
 2de:	96 95       	lsr	r25
 2e0:	87 95       	ror	r24
 2e2:	81 50       	subi	r24, 0x01	; 1
 2e4:	8c bf       	out	0x3c, r24	; 60
 2e6:	08 95       	ret

000002e8 <PWM_Start>:


void PWM_Start(void)
{
	// Fgeneration= Fosc/number of timer bit * prescaler 
	set_bit(TCCR0,CS00);
 2e8:	83 b7       	in	r24, 0x33	; 51
 2ea:	81 60       	ori	r24, 0x01	; 1
 2ec:	83 bf       	out	0x33, r24	; 51
 2ee:	08 95       	ret

000002f0 <__vector_11>:


/**************************************** Interrupts **************************************/

ISR(TIMER0_OVF_vect)
{
 2f0:	1f 92       	push	r1
 2f2:	0f 92       	push	r0
 2f4:	0f b6       	in	r0, 0x3f	; 63
 2f6:	0f 92       	push	r0
 2f8:	11 24       	eor	r1, r1
 2fa:	2f 93       	push	r18
 2fc:	3f 93       	push	r19
 2fe:	4f 93       	push	r20
 300:	5f 93       	push	r21
 302:	6f 93       	push	r22
 304:	7f 93       	push	r23
 306:	8f 93       	push	r24
 308:	9f 93       	push	r25
 30a:	af 93       	push	r26
 30c:	bf 93       	push	r27
 30e:	ef 93       	push	r30
 310:	ff 93       	push	r31
	static uint32 counter =0;
	counter++;
 312:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 316:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 31a:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 31e:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 322:	01 96       	adiw	r24, 0x01	; 1
 324:	a1 1d       	adc	r26, r1
 326:	b1 1d       	adc	r27, r1
 328:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 32c:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 330:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 334:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
	if(counter == N_OF_OVR_FLOWS)
 338:	40 91 66 00 	lds	r20, 0x0066	; 0x800066 <N_OF_OVR_FLOWS>
 33c:	50 91 67 00 	lds	r21, 0x0067	; 0x800067 <N_OF_OVR_FLOWS+0x1>
 340:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <N_OF_OVR_FLOWS+0x2>
 344:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <N_OF_OVR_FLOWS+0x3>
 348:	84 17       	cp	r24, r20
 34a:	95 07       	cpc	r25, r21
 34c:	a6 07       	cpc	r26, r22
 34e:	b7 07       	cpc	r27, r23
 350:	81 f4       	brne	.+32     	; 0x372 <__vector_11+0x82>
	{
		TCNT0 = init_Value;
 352:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <init_Value>
 356:	82 bf       	out	0x32, r24	; 50
		
		counter = 0;
 358:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 35c:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 360:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 364:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
		(*ptr)();		
 368:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <ptr>
 36c:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <ptr+0x1>
 370:	09 95       	icall
	}

}
 372:	ff 91       	pop	r31
 374:	ef 91       	pop	r30
 376:	bf 91       	pop	r27
 378:	af 91       	pop	r26
 37a:	9f 91       	pop	r25
 37c:	8f 91       	pop	r24
 37e:	7f 91       	pop	r23
 380:	6f 91       	pop	r22
 382:	5f 91       	pop	r21
 384:	4f 91       	pop	r20
 386:	3f 91       	pop	r19
 388:	2f 91       	pop	r18
 38a:	0f 90       	pop	r0
 38c:	0f be       	out	0x3f, r0	; 63
 38e:	0f 90       	pop	r0
 390:	1f 90       	pop	r1
 392:	18 95       	reti

00000394 <__umulhisi3>:
 394:	a2 9f       	mul	r26, r18
 396:	b0 01       	movw	r22, r0
 398:	b3 9f       	mul	r27, r19
 39a:	c0 01       	movw	r24, r0
 39c:	a3 9f       	mul	r26, r19
 39e:	70 0d       	add	r23, r0
 3a0:	81 1d       	adc	r24, r1
 3a2:	11 24       	eor	r1, r1
 3a4:	91 1d       	adc	r25, r1
 3a6:	b2 9f       	mul	r27, r18
 3a8:	70 0d       	add	r23, r0
 3aa:	81 1d       	adc	r24, r1
 3ac:	11 24       	eor	r1, r1
 3ae:	91 1d       	adc	r25, r1
 3b0:	08 95       	ret

000003b2 <_exit>:
 3b2:	f8 94       	cli

000003b4 <__stop_program>:
 3b4:	ff cf       	rjmp	.-2      	; 0x3b4 <__stop_program>
